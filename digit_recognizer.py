# -*- coding: utf-8 -*-
"""digit Recognizer.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UbnTAAViDgG2DevHlOADdDvQ0bPEvHqU
"""

from keras.models import Sequential
from keras.layers import Convolution2D, MaxPooling2D, Flatten, Dense

clf = Sequential()

clf.add(Convolution2D(32, (3, 3),input_shape = (28, 28, 1), activation = 'relu'))

clf.add(MaxPooling2D(pool_size = (2, 2)))

clf.add(Convolution2D(32, 3, 3, activation = 'relu'))
clf.add(MaxPooling2D(pool_size = (2, 2)))

clf.add(Flatten())

clf.add(Dense(output_dim = 128, activation='relu'))

clf.add(Dense(10, activation='softmax'))

clf.compile(optimizer='adam', loss = 'categorical_crossentropy',metrics = ['accuracy'])

from google.colab import files

uploaded = files.upload()

for fn in uploaded.keys():
  print('User uploaded file "{name}" with length {length} bytes'.format(
      name=fn, length=len(uploaded[fn])))

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd

train_df = pd.read_csv("train.csv")
test_df = pd.read_csv('test.csv')

y = train_df['label']

X = train_df.drop(labels = ['label'], axis = 1)

import seaborn as sns
sns.countplot(y)

X = X / 255.0
test_df = test_df / 255.0

X = X.values.reshape(-1, 28, 28, 1)
test_df = test_df.values.reshape(-1, 28, 28, 1)

from keras.utils import to_categorical
y = to_categorical(y, num_classes = 10)

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y,  test_size = 0.10, random_state = 0)

plt.imshow(X_train[0][:,:,0])

history = clf.fit(X_train, y_train, batch_size = 64, epochs = 50, validation_data = (X_test, y_test), verbose = 2)

results = clf.predict(test_df)
results.shape

results

results = np.argmax(results, axis = 1)

results = pd.Series(results, name= 'label')

submission = pd.concat([pd.Series(range(1,28001), name = 'ImageId'), results], axis = 1)
submission.to_csv('results.csv', header=True, index = False)

files.download('results.csv')